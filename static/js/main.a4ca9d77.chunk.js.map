{"version":3,"sources":["component/Heading/Heading.module.css","service/MovieService.js","component/Movie/Movie.js","component/MovieList/MovieList.js","component/Heading/Heading.js","component/AddFavourite/AddFavourite.js","component/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","url","getMovies","keyword","a","console","log","fetch","response","json","data","filter","d","show","image","Movie","movie","src","medium","alt","name","language","type","status","genres","externals","imdb","thetvdb","tvrage","id","network","country","code","countryZone","rating","average","schedule","days","time","score","officialSite","MovieList","props","FavouriteComponent","favouriteComponent","movies","map","index","className","onClick","handleFavouritesClick","selected","Heading","keyWord","handleChange","styles","search","join","value","onChange","placeholder","AddFavourite","style","background","width","height","viewBox","fill","xmlns","fillRule","Home","useState","favourites","setFavourites","setMovies","setSelected","setKeyWord","keyQuery","setKeyQuery","useEffect","delayedQuery","useRef","func","delay","timer","args","clearTimeout","setTimeout","apply","debounce","q","current","e","target","length","newFavouriteList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4ca9d77.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Heading_search__1n_I6\"};","const url = \"http://api.tvmaze.com/search/\";\nexport const getMovies = async (keyword) => {\n   if (!keyword) {\n      console.log(\"keyword is null\")\n      return;\n   }\n   const response = await fetch(`${url}shows?q=${keyword}`);\n   const data = await response.json();\n   return data.filter(d => d.show.image);\n}\n\nexport const getMoviesByPerson = async (person) =>{\n   if(!person) return;\n   const response = await fetch(`${url}people?q=${person}`);\n   const data = await response.json();\n   return data;\n}\n\n","import 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Movie = ({ movie }) => {\n    return (\n        <>\n            {movie && movie.show &&\n                <tr key={movie.show.id}>\n                    <td><img src={movie.show.image && movie.show.image.medium} alt={movie.show.name}></img></td>\n                    <td>{movie.show.name}</td>\n                    <td>{movie.show.language}</td>\n                    <td>{movie.show.type}</td>\n                    <td>{movie.show.status}</td>\n                    <td>{movie.show.genres}</td>\n                    <td>{movie.show.externals.imdb}</td>\n                    <td>{movie.show.externals.thetvdb}</td>\n                    <td>{movie.show.externals.tvrage}</td>\n                    <td>{movie.show.id}</td>\n                    <td>{movie.show.network && movie.show.network.country.name}</td>\n                    <td>{movie.show.network && movie.show.network.country.code}</td>\n                    <td>{movie.show.network && movie.show.network.country.countryZone}</td>\n                    <td>{movie.show.rating.average}</td>\n                    <td>{movie.show.schedule.days}</td>\n                    <td>{movie.show.schedule.time}</td>\n                    <td>{movie.score}</td>\n                    <td>{movie.show.url}</td>\n                    <td>{movie.show.officialSite}</td>\n                </tr>}\n            {!movie && \"nothing\"}\n        </>\n    )\n}\n\nexport default Movie;\n","import Movie from \"../Movie/Movie\"\nconst MovieList = (props) => {\n    const FavouriteComponent = props.favouriteComponent;\n    return (\n        <>\n            {props.movies.map((movie, index) => (\n                <div key={movie.show.id} className='image-container d-flex justify-content-start m-2'>\n                    <img src={movie.show.image && movie.show.image.medium} alt='movie'></img>\n                    <div className='overlay d-flex align-items-center justify-content-center'>\n                        <button onClick={() => props.handleFavouritesClick(movie)}>\n                            <FavouriteComponent />\n                        </button>\n                    </div>\n                </div>\n            ))}\n            <hr/>\n            <Movie movie={props.selected}/>\n        </>\n    );\n};\n\nexport default MovieList;","import styles from './Heading.module.css'\nconst Heading = ({ keyWord, handleChange }) => {\n    return (\n        <div className='col col-12'>\n            <input className={[\"search-control\", styles.search].join(' ')} type='text' value={keyWord} onChange={handleChange} placeholder=\"search movies\" />\n         {/* <input className={styles.search} type='text' value={keyPerson} onChange={handlePersonChange} placeholder=\"search person\"/>  */}\n        </div>\n    )\n}\n\n\n\n\nexport default Heading;","const AddFavourite = () => {\n    return (\n        <>\n            <div style={{background:\"transparent\"}}>\n                <span className='mr-2' style={{ \"fontSize\": \"16px\" }}>Add to Favourites</span>\n                <svg\n                    width='1em'\n                    height='1em'\n                    viewBox='0 0 16 16'\n                    className='bi bi-heart-fill'\n                    fill='red'\n                    xmlns='http://www.w3.org/2000/svg' >\n                    <path\n                        fillRule='evenodd'\n                        d='M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z'\n                    />\n                </svg>\n            </div>\n        </>\n    );\n};\n\nexport default AddFavourite;","import React, { useState, useEffect, useRef } from 'react'\nimport { getMovies } from '../../service/MovieService'\nimport MovieList from '../MovieList/MovieList'\nimport Heading from '../Heading/Heading'\n//import styles from './Home.module.css'\nimport AddFavourite from '../AddFavourite/AddFavourite'\n\nfunction debounce(func, delay) {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => { func.apply(this, args); }, delay);\n    }\n}\nconst Home = () => {\n    const [favourites, setFavourites] = useState([]);\n    const [movies, setMovies] = useState([]);\n    const [selected, setSelected] = useState();\n    const [keyWord, setKeyWord] = useState(\"Japan\");\n    const [keyQuery, setKeyQuery] = useState(\"Japan\");\n //   const [keyPerson, setKeyPerson] = useState(\"\");\n    //const [keyPersonQuery, setKeyPersonQuery] = useState(\"\");\n\n    useEffect(() => {\n        (async () => {\n            if (!keyQuery) return;\n            const data = await getMovies(keyQuery);\n            console.log(`${keyQuery} got: `, data);\n            setMovies(data);\n        })();\n    }, [keyQuery]);\n\n    // useEffect(() => {\n    //     (async () => {\n    //         if (!keyPersonQuery) return;\n    //         const data = await getMoviesByPerson(keyPersonQuery);\n    //         console.log(`${keyPersonQuery} got: `, data);\n    //         setMovies(data);\n    //     })();\n    // }, [keyPersonQuery]);\n    const handleChange = e => {\n        setKeyWord(e.target.value);\n        delayedQuery(e.target.value);\n    }\n    const addFavouriteMovie = (movie) => {\n        setSelected(movie);\n        const newFavouriteList = [...favourites, movie];\n        setFavourites(newFavouriteList);\n    };\n    // const handlePersonChange = e => {\n    //     setKeyPerson(e.target.value);\n    //     delayedPersonQuery(e.target.value);\n    // }\n    const delayedQuery = useRef(debounce(q => setKeyQuery(q), 1000), [keyWord]).current;\n    //const delayedPersonQuery = useRef(debounce(q => setKeyPersonQuery(q), 1000), [keyWord]).current;\n    return (\n        <>\n            <div className='container-fluid movie-app'>\n                <Heading keyWord={keyWord} handleChange={handleChange} />\n                <div className='row'>\n                    {movies && movies.length > 0 &&\n                        <MovieList movies={movies} selected={selected}\n                            handleFavouritesClick={addFavouriteMovie}\n                            favouriteComponent={AddFavourite} />}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home;\n","import './App.css';\nimport Home from './component/Home/Home'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}