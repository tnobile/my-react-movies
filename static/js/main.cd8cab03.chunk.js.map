{"version":3,"sources":["service/MovieService.js","component/Home/Home.js","App.js","reportWebVitals.js","index.js","component/Home/Home.module.css"],"names":["getMovies","keyword","a","fetch","response","data","json","Home","useState","movies","setMovies","keyWord","setKeyWord","keyQuery","setKeyQuery","useEffect","console","log","delayedQuery","useRef","func","delay","timer","args","clearTimeout","setTimeout","apply","debounce","q","current","className","styles","search","type","value","onChange","e","target","length","map","m","src","show","image","medium","alt","name","language","status","genres","externals","imdb","thetvdb","tvrage","id","network","country","code","countryZone","rating","average","schedule","days","time","score","url","officialSite","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"0PACaA,EAAS,uCAAE,WAAOC,GAAP,iBAAAC,EAAA,sEACEC,MAFf,wCAEyBF,GADZ,cACfG,EADe,OAEfC,EAAOD,EAASE,OAFD,kBAGdD,GAHc,2CAAF,sD,uBCUtB,IAoDeE,EApDF,WAAO,IAAD,EACaC,mBAAS,IADtB,mBACRC,EADQ,KACAC,EADA,OAEeF,mBAAS,SAFxB,mBAERG,EAFQ,KAECC,EAFD,OAGiBJ,mBAAS,SAH1B,mBAGRK,EAHQ,KAGEC,EAHF,KAKfC,qBAAU,WACN,sBAAC,4BAAAb,EAAA,yDACQW,EADR,iEAEsBb,EAAUa,GAFhC,OAESR,EAFT,OAGGW,QAAQC,IAAR,UAAeJ,EAAf,UAAiCR,GACjCK,EAAUL,GAJb,0CAAD,KAMD,CAACQ,IACJ,IAIMK,EAAeC,iBAxBzB,SAAkBC,EAAMC,GAAQ,IACxBC,EADuB,OAE3B,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAChBC,aAAaF,GACbA,EAAQG,YAAW,WAAQL,EAAKM,MAAM,EAAMH,KAAUF,IAoB9BM,EAAS,SAAAC,GAAC,OAAId,EAAYc,KAAI,KAAO,CAACjB,IAAUkB,QAC5E,OACI,qCACI,uBAAOC,UAAWC,IAAOC,OAAQC,KAAK,OAAOC,MAAOvB,EAASwB,SAPhD,SAACC,GAClBxB,EAAWwB,EAAEC,OAAOH,OACpBhB,EAAakB,EAAEC,OAAOH,UAOlB,gCACI,gCACKzB,GAAUA,EAAO6B,OAAS,GAAK7B,EAAO8B,KAAI,SAAAC,GAAC,OACxC,+BACI,6BAAI,qBAAKC,IAAKD,EAAEE,KAAKC,OAASH,EAAEE,KAAKC,MAAMC,OAAQC,IAAKL,EAAEE,KAAKI,SAC/D,6BAAKN,EAAEE,KAAKI,OACZ,6BAAKN,EAAEE,KAAKK,WACZ,6BAAKP,EAAEE,KAAKT,OACZ,6BAAKO,EAAEE,KAAKM,SACZ,6BAAKR,EAAEE,KAAKO,SACZ,6BAAKT,EAAEE,KAAKQ,UAAUC,OACtB,6BAAKX,EAAEE,KAAKQ,UAAUE,UACtB,6BAAKZ,EAAEE,KAAKQ,UAAUG,SACtB,6BAAKb,EAAEE,KAAKY,KACZ,6BAAKd,EAAEE,KAAKa,SAAWf,EAAEE,KAAKa,QAAQC,QAAQV,OAC9C,6BAAKN,EAAEE,KAAKa,SAAWf,EAAEE,KAAKa,QAAQC,QAAQC,OAC9C,6BAAKjB,EAAEE,KAAKa,SAAWf,EAAEE,KAAKa,QAAQC,QAAQE,cAC9C,6BAAKlB,EAAEE,KAAKiB,OAAOC,UACnB,6BAAKpB,EAAEE,KAAKmB,SAASC,OACrB,6BAAKtB,EAAEE,KAAKmB,SAASE,OACrB,6BAAKvB,EAAEwB,QACP,6BAAKxB,EAAEE,KAAKuB,MACZ,6BAAKzB,EAAEE,KAAKwB,iBAnBP1B,EAAEE,KAAKY,eCxBzBa,MARf,WACE,OACE,qBAAKrC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,wB","file":"static/js/main.cd8cab03.chunk.js","sourcesContent":["const url= \"http://api.tvmaze.com/search/shows?q=\";\nexport const getMovies =async (keyword) => {\n   const response = await fetch(url+keyword)\n   const data = response.json();\n   return data;\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getMovies } from '../../service/MovieService'\nimport styles from './Home.module.css'\n\nfunction debounce(func, delay) {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => { func.apply(this, args); }, delay);\n    }\n}\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    const [keyWord, setKeyWord] = useState(\"Japan\");\n    const [keyQuery, setKeyQuery] = useState(\"Japan\");\n\n    useEffect(() => {\n        (async () => {\n            if (!keyQuery) return;\n            const data = await getMovies(keyQuery);\n            console.log(`${keyQuery} got: `, data);\n            setMovies(data);\n        })();\n    }, [keyQuery]);\n    const handleChange = (e) => {\n        setKeyWord(e.target.value)\n        delayedQuery(e.target.value);\n    }\n    const delayedQuery = useRef(debounce(q => setKeyQuery(q), 1000), [keyWord]).current;\n    return (\n        <>\n            <input className={styles.search} type='text' value={keyWord} onChange={handleChange}>\n            </input>\n            <table>\n                <tbody>\n                    {movies && movies.length > 0 && movies.map(m =>\n                        <tr key={m.show.id}>\n                            <td><img src={m.show.image && m.show.image.medium} alt={m.show.name}></img></td>\n                            <td>{m.show.name}</td>\n                            <td>{m.show.language}</td>\n                            <td>{m.show.type}</td>\n                            <td>{m.show.status}</td>\n                            <td>{m.show.genres}</td>\n                            <td>{m.show.externals.imdb}</td>\n                            <td>{m.show.externals.thetvdb}</td>\n                            <td>{m.show.externals.tvrage}</td>\n                            <td>{m.show.id}</td>\n                            <td>{m.show.network && m.show.network.country.name}</td>\n                            <td>{m.show.network && m.show.network.country.code}</td>\n                            <td>{m.show.network && m.show.network.country.countryZone}</td>\n                            <td>{m.show.rating.average}</td>\n                            <td>{m.show.schedule.days}</td>\n                            <td>{m.show.schedule.time}</td>\n                            <td>{m.score}</td>\n                            <td>{m.show.url}</td>\n                            <td>{m.show.officialSite}</td>\n                        </tr>)}\n                </tbody>\n            </table>\n        </>\n    )\n}\n\nexport default Home;\n","import './App.css';\nimport Home from './component/Home/Home'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n     </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Home_search__1tiDx\"};"],"sourceRoot":""}